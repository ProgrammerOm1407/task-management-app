{
	"info": {
		"_postman_id": "a1b2c3d4-e5f6-g7h8-i9j0-k1l2m3n4o5p6",
		"name": "Task Management API",
		"description": "Collection for testing the Task Management API endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register User",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test User\",\n    \"email\": \"test@example.com\",\n    \"password\": \"password123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/auth/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"auth",
								"register"
							]
						},
						"description": "Register a new user and get JWT token"
					},
					"response": []
				},
				{
					"name": "Login User",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"test@example.com\",\n    \"password\": \"password123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/auth/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"auth",
								"login"
							]
						},
						"description": "Login with existing user credentials"
					},
					"response": []
				},
				{
					"name": "Get User Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-auth-token",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:3000/api/auth/me",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"auth",
								"me"
							]
						},
						"description": "Get current user profile (requires authentication)"
					},
					"response": []
				}
			],
			"description": "Authentication related endpoints"
		},
		{
			"name": "Tasks",
			"item": [
				{
					"name": "Create Task",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-auth-token",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Test Task\",\n    \"description\": \"This is a test task\",\n    \"status\": \"pending\",\n    \"priority\": \"Medium\",\n    \"dueDate\": \"2023-12-31\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/tasks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"tasks"
							]
						},
						"description": "Create a new task (requires authentication)"
					},
					"response": []
				},
				{
					"name": "Get All Tasks",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-auth-token",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:3000/api/tasks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"tasks"
							],
							"query": [
								{
									"key": "status",
									"value": "pending",
									"disabled": true
								},
								{
									"key": "priority",
									"value": "High",
									"disabled": true
								}
							]
						},
						"description": "Get all tasks (can be filtered by status or priority)"
					},
					"response": []
				},
				{
					"name": "Get Task by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-auth-token",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:3000/api/tasks/{{taskId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"tasks",
								"{{taskId}}"
							]
						},
						"description": "Get a single task by ID"
					},
					"response": []
				},
				{
					"name": "Update Task",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-auth-token",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"in-progress\",\n    \"description\": \"Updated description\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/tasks/{{taskId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"tasks",
								"{{taskId}}"
							]
						},
						"description": "Update an existing task (requires authentication)"
					},
					"response": []
				},
				{
					"name": "Delete Task",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "x-auth-token",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:3000/api/tasks/{{taskId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"tasks",
								"{{taskId}}"
							]
						},
						"description": "Delete a task (requires authentication)"
					},
					"response": []
				},
				{
					"name": "Get Tasks by Status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-auth-token",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:3000/api/tasks?status=pending",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"tasks"
							],
							"query": [
								{
									"key": "status",
									"value": "pending"
								}
							]
						},
						"description": "Get tasks filtered by status"
					},
					"response": []
				},
				{
					"name": "Get Tasks by Priority",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-auth-token",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:3000/api/tasks?priority=High",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"tasks"
							],
							"query": [
								{
									"key": "priority",
									"value": "High"
								}
							]
						},
						"description": "Get tasks filtered by priority"
					},
					"response": []
				}
			],
			"description": "Task management endpoints"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Auto-save auth token from login or register responses",
					"if (pm.response.code === 200) {",
					"    const jsonData = pm.response.json();",
					"    if (jsonData && jsonData.token) {",
					"        pm.environment.set(\"authToken\", jsonData.token);",
					"        console.log(\"Auth token saved to environment\");",
					"    }",
					"    ",
					"    // Save task ID if creating a task",
					"    if (pm.request.url.path.includes(\"/tasks\") && pm.request.method === \"POST\") {",
					"        if (jsonData && jsonData.data && jsonData.data._id) {",
					"            pm.environment.set(\"taskId\", jsonData.data._id);",
					"            console.log(\"Task ID saved to environment\");",
					"        }",
					"    }",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "authToken",
			"value": ""
		},
		{
			"key": "taskId",
			"value": ""
		}
	]
}